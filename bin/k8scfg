#!/usr/bin/env bash

_usage() {
    echo "$(basename "$0") current | available | set <context> [<namespace>]"
}

_set() {
    local CTX="$1"
    CFG="$(kubectl config -o json view)"
    CTX="$(echo "$CFG" | jq -r '.contexts[].name|select(test("'"$CTX"'"))')"

    if [ -z "$CTX" ] || [ "$(echo "$CTX" | wc -l)" -ne 1 ]; then
        echo "bad context: $1" && exit 3
    fi

    CCTX="$(echo "$CFG" | jq -r '."current-context"')"
    CNS="$(echo "$CFG" | jq -r '.contexts[]|select(.name=="'"$CCTX"'").context.namespace')"

    if [ -z "${2:-""}" ]; then
        if [ "$CNS" = "null" ]
        then NS="default"
        else NS="$CNS"
        fi
    else
        if kubectl get namespaces | awk '{print $1}' | grep -qE "^${2}$"
        then NS="$2"
        else echo "No such namespace: $2" && exit 4
        fi
    fi
    kubectl config use-context "$CTX"
    kubectl config set-context --current --namespace="$NS"
}

_show() {
    case "$1" in
        "all")
            kubectl config get-contexts;;
         "current")
             CFG="$(kubectl config -o json view)"
             CCTX="$(echo "$CFG" | jq -r '."current-context"')"
             CNS="$(echo "$CFG" | jq -r '.contexts[]|select(.name=="'"$CCTX"'").context.namespace')"
             echo "$CCTX:$CNS";;
         *)
             echo ""
    esac
}

if ! [ -f ~/.kube/config ] || ! test "$(command -v kubectl)"
then exit 0
fi

case "${1:-""}" in
    "")
        _usage;;
    "available")
        _show all;;
    "current")
        _show current;;
    "set")
        case "${2:-""}" in
            "")
                _show all;;
            *)
                _set "$2" "${3:-""}";;
        esac;;
    *)
        echo "unrecognized: $1"
        exit 44;;
esac
